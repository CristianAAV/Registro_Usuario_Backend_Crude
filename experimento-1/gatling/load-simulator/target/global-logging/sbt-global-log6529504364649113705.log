[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (GraalVM Community Java 17.0.8)
[debug] Load.defaultLoad until apply took 83.47148ms
[debug]           Load.loadUnit: plugins took 49.609327ms
[debug]           Load.loadUnit: defsScala took 0.232918ms
[debug] [Loading] Scanning directory /opt/gatling/user-files/project
[debug]             Load.loadUnit: mkEval took 6.588161ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /opt/gatling/user-files/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.788325 ms
[info] loading settings for project user-files-build from plugins.sbt ...
[debug]               Load.resolveProject(user-files-build) took 26.018277ms
[debug]             Load.loadTransitive: finalizeProject(Project(id user-files-build, base: /opt/gatling/user-files/project, plugins: List(<none>))) took 49.58058ms
[debug] [Loading] Done in /opt/gatling/user-files/project, returning: (user-files-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 407.131164ms
[debug]           Load.loadUnit: cleanEvalClasses took 56.965918ms
[debug]         Load.loadUnit(file:/opt/gatling/user-files/project/, ...) took 520.257992ms
[debug]       Load.apply: load took 606.871275ms
[debug]       Load.apply: resolveProjects took 3.525972ms
[debug]       Load.apply: finalTransforms took 35.581885ms
[debug]       Load.apply: config.delegates took 4.586274ms
[debug]       Load.apply: Def.make(settings)... took 251.894174ms
[debug]       Load.apply: structureIndex took 102.394698ms
[debug]       Load.apply: mkStreams took 0.863056ms
[info] loading project definition from /opt/gatling/user-files/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1893.611339ms
[debug]     Load.loadUnit: defsScala took 0.00573ms
[debug] [Loading] Scanning directory /opt/gatling/user-files
[debug]       Load.loadUnit: mkEval took 2.837015ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /opt/gatling/user-files, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(io.gatling.sbt.GatlingPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(io.gatling.sbt.GatlingPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,io.gatling.sbt.GatlingPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.067499 ms
[info] loading settings for project user-files from build.sbt ...
[debug]         Load.resolveProject(user-files) took 21.055859ms
[debug]       Load.loadTransitive: finalizeProject(Project(id user-files, base: /opt/gatling/user-files, plugins: List(<none>))) took 26.327577ms
[debug] [Loading] Done in /opt/gatling/user-files, returning: (user-files)
[debug]     Load.loadUnit: loadedProjectsRaw took 237.915143ms
[debug]     Load.loadUnit: cleanEvalClasses took 166.316822ms
[debug]   Load.loadUnit(file:/opt/gatling/user-files/, ...) took 2300.411804ms
[debug] Load.apply: load took 2314.382136ms
[debug] Load.apply: resolveProjects took 0.171049ms
[debug] Load.apply: finalTransforms took 8.894122ms
[debug] Load.apply: config.delegates took 0.657547ms
[debug] Load.apply: Def.make(settings)... took 69.750446ms
[debug] Load.apply: structureIndex took 26.237235ms
[debug] Load.apply: mkStreams took 0.00338ms
[info] set current project to user-files (in build file:/opt/gatling/user-files/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(Gatling/test, None, None)
[debug] Evaluating tasks: Gatling / test
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to /opt/gatling/user-files/target/scala-2.13/test-classes ...
[info] done compiling
